package br.com.poimen.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MinistryGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMinistryGroupAllPropertiesEquals(MinistryGroup expected, MinistryGroup actual) {
        assertMinistryGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertMinistryGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMinistryGroupAllUpdatablePropertiesEquals(MinistryGroup expected, MinistryGroup actual) {
        assertMinistryGroupUpdatableFieldsEquals(expected, actual);
        assertMinistryGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMinistryGroupAutoGeneratedPropertiesEquals(MinistryGroup expected, MinistryGroup actual) {
        assertThat(expected)
            .as("Verify MinistryGroup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMinistryGroupUpdatableFieldsEquals(MinistryGroup expected, MinistryGroup actual) {
        assertThat(expected)
            .as("Verify MinistryGroup relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getEstablishedDate()).as("check establishedDate").isEqualTo(actual.getEstablishedDate()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMinistryGroupUpdatableRelationshipsEquals(MinistryGroup expected, MinistryGroup actual) {
        assertThat(expected)
            .as("Verify MinistryGroup relationships")
            .satisfies(e -> assertThat(e.getChurch()).as("check church").isEqualTo(actual.getChurch()))
            .satisfies(e -> assertThat(e.getPresident()).as("check president").isEqualTo(actual.getPresident()))
            .satisfies(e -> assertThat(e.getSupervisor()).as("check supervisor").isEqualTo(actual.getSupervisor()))
            .satisfies(e -> assertThat(e.getMembers()).as("check members").isEqualTo(actual.getMembers()));
    }
}
