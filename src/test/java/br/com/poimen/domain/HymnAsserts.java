package br.com.poimen.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HymnAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHymnAllPropertiesEquals(Hymn expected, Hymn actual) {
        assertHymnAutoGeneratedPropertiesEquals(expected, actual);
        assertHymnAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHymnAllUpdatablePropertiesEquals(Hymn expected, Hymn actual) {
        assertHymnUpdatableFieldsEquals(expected, actual);
        assertHymnUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHymnAutoGeneratedPropertiesEquals(Hymn expected, Hymn actual) {
        assertThat(expected)
            .as("Verify Hymn auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHymnUpdatableFieldsEquals(Hymn expected, Hymn actual) {
        assertThat(expected)
            .as("Verify Hymn relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getAuthor()).as("check author").isEqualTo(actual.getAuthor()))
            .satisfies(e -> assertThat(e.getHymnNumber()).as("check hymnNumber").isEqualTo(actual.getHymnNumber()))
            .satisfies(e -> assertThat(e.getLyrics()).as("check lyrics").isEqualTo(actual.getLyrics()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHymnUpdatableRelationshipsEquals(Hymn expected, Hymn actual) {
        assertThat(expected)
            .as("Verify Hymn relationships")
            .satisfies(e -> assertThat(e.getWorshipEvents()).as("check worshipEvents").isEqualTo(actual.getWorshipEvents()));
    }
}
